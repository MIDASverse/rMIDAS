% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/midas_functions.R
\name{impute}
\alias{impute}
\title{Impute missing data using Midas}
\usage{
impute(
  data,
  binary_columns = NULL,
  softmax_columns,
  training_epochs = 10L,
  layer_structure = c(256, 256, 256),
  learn_rate = 4e-04,
  input_drop = 0.8,
  seed = 123L,
  vae_layer = FALSE,
  latent_space_size = 4,
  cont_adj = 1,
  binary_adj = 1,
  softmax_adj = 1,
  dropout_level = 0.5,
  vae_alpha = 1,
  vae_sample_var = 1
)
}
\arguments{
\item{data}{a data.frame (or coercible) object, or a 'midas_preproc' object created from rMIDAS::convert()}

\item{binary_columns}{a vector of columns containing binary variables. NOTE: if \code{data} is a \code{midas_preproc} object, this argument will be overwritten.}

\item{softmax_columns}{a list of lists, each internal list corresponding to a single categorical variable and containing names of the one-hot encoded variable names. NOTE: if \code{data} is a \code{midas_preproc} object, this argument will be overwritten.}

\item{training_epochs}{an integer indicating the number of forward passes to conduct when running the model.}
}
\value{
Returns object of class \code{midas} from which completed datasets can be drawn, using \code{rMIDAS::generate()}
}
\description{
impute() builds and runs a MIDAS neural network on the supplied data.
}
\examples{
midas_obj <- import_midas(layer_structure = c(256,256,256),
                          input_drop = 0.75,
                          learn_rate = 0.0005,
                          seed = 89)
}
\keyword{import}
