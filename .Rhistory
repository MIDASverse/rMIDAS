have_numpy <- reticulate::py_module_available("numpy")
?set_python_env
library(devtools)
library(roxygen2)
document()
?set_python_env
check()
check()
check()
check()
test <- function(a = as.numeric()) {print(a)}
test(2.3)
test <- function(a = as.integer()) {print(a)}
test(2.3)
as.integer(2.3)
as.integer(2.7)
document()
?overimpute
document()
?overimpute
test <- NULL
is.numeric(test)
document()
?overimpute
document()
?overimpute
document()
?overimpute
document()
?overimpute
document()
?overimpute
document()
?overimpute
document()
raw_data <- data.table(a = sample(c("red","yellow","blue",NA),1000, replace = TRUE),
b = 1:1000,
c = sample(c("YES","NO",NA),1000,replace=TRUE),
d = runif(1000,1,10),
e = sample(c("YES","NO"), 1000, replace = TRUE),
f = sample(c("male","female","trans","other",NA), 1000, replace = TRUE))
# Names of bin./cat. variables
test_bin <- c("c","e")
test_cat <- c("a","f")
# Pre-process data
test_data <- convert(raw_data,
bin_cols = test_bin,
cat_cols = test_cat,
minmax_scale = TRUE)
# Overimpute
test_imp <- overimpute(test_data,
spikein = 0.3,
training_epochs = 50,
report_ival = 25)
library(rMIDAS)
# Overimpute
test_imp <- overimpute(test_data,
spikein = 0.3,
training_epochs = 50,
report_ival = 25)
setwd("~/Dropbox/rMIDAS")
#' Instantiate Midas class
#'
#' Import Midas class into R environment, and instantiates passed parameters.
#' @keywords import
#' @param ... Arguments passed to the MIDAS class for instantiating network
#' @import reticulate
#' @export
#' @examples
#' midas_base <- import_midas()
import_midas <- function(...) {
midas_base <- reticulate::import_from_path("midas_base", path = base::system.file("python", package = utils::packageName(), mustWork = TRUE))
midas_class <- midas_base$Midas
attr(midas_class, "class") <- "midas"
return(midas_class(...))
}
utils::packageName()
print(utils::packageName())
setwd("~/Dropbox")
setwd("~/Dropbox/rMIDAS")
document()
