library(devtools)
library(roxygen2)
document()_
document()
raw_data <- data.table(a = sample(c("red","yellow","blue",NA),1000, replace = TRUE),
b = 1:1000,
c = sample(c("YES","NO",NA),1000,replace=TRUE),
d = runif(1000,1,10),
e = sample(c("YES","NO"), 1000, replace = TRUE),
f = sample(c("male","female","trans","other",NA), 1000, replace = TRUE))
# Names of bin./cat. variables
test_bin <- c("c","e")
test_cat <- c("a","f")
# Pre-process data
test_data <- convert(raw_data,
bin_cols = test_bin,
cat_cols = test_cat,
minmax_scale = TRUE)
# Overimpute
test_imp <- overimpute(test_data,
spikein = 0.3,
training_epochs = 50,
report_ival = 25)
system.file("python", package = "rMIDAS", mustWork = TRUE)
base::system.file("python", "midas_base", package = "rMIDAS", mustWork = TRUE)
system.file("python", "midas_base", package = "rMIDAS", mustWork = TRUE)
system.file("python/", "midas_base", package = "rMIDAS", mustWork = TRUE)
system.file("python", "midas_base.py", package = "rMIDAS", mustWork = TRUE)
midas_base <- reticulate::import_from_path("midas_base", path = system.file("python", "midas_base.py", package = "rMIDAS", mustWork = TRUE))
document()
# Overimpute
test_imp <- overimpute(test_data,
spikein = 0.3,
training_epochs = 50,
report_ival = 25)
?import_from_path
system.file("python", package = "rMIDAS", mustWork = TRUE)
midas_base <- reticulate::import_from_path("midas_base", path = system.file("python", package = "rMIDAS", mustWork = TRUE))
?is
?inherits
test <- 3
class(test)
class(test) <- c("numeric","hello")
inherits(test, "hello")
library(devtools)
setwd("~/Dropbox/rMIDAS")
load_all()
knitr::opts_chunk$set(echo = TRUE)
LOCAL <- identical(Sys.getenv("LOCAL"), "true")
adult <- read.csv("https://raw.githubusercontent.com/MIDASverse/MIDASpy/master/Examples/adult_data.csv",
row.names = 1)[1:1000,]
set.seed(89)
adult <- add_missingness(adult, prop = 0.1)
adult_cat <- c('workclass','marital_status','relationship','race','education','occupation','native_country')
adult_bin <- c('sex','class_labels')
# Apply rMIDAS preprocessing steps
adult_conv <- convert(adult,
bin_cols = adult_bin,
cat_cols = adult_cat,
minmax_scale = TRUE)
# Train the model for 2 epochs
adult_train <- train(adult_conv,
training_epochs = 20,
layer_structure = c(128,128),
input_drop = 0.75,
seed = 89)
# Generate 10 imputed datasets
adult_complete <- complete(adult_train, m = 10)
# Inspect first imputed dataset:
head(adult_complete[[1]])
# Estimate logit model on 10 completed datasets (using Rubin's combination rules)
adult_model <- combine("class_labels ~ hours_per_week + sex",
adult_complete,
family = stats::binomial)
adult_model
